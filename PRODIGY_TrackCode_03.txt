<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic-Tac-Toe</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            background-color: #f4f7fc;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .game-container {
            text-align: center;
            background-color: #fff;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            width: 300px;
        }

        h1 {
            font-size: 36px;
            margin-bottom: 20px;
            color: #4CAF50;
        }
        .board {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-template-rows: repeat(3, 100px);
            gap: 5px;
            margin-bottom: 20px;
        }

        .cell {
            width: 100px;
            height: 100px;
            background-color: #f1f1f1;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 36px;
            color: #333;
            cursor: pointer;
            border: 2px solid #ddd;
            transition: background-color 0.3s ease;
        }

        .cell:hover {
            background-color: #e1e1e1;
        }

        .cell.X {
            color: #2196F3;
        }

        .cell.O {
            color: #FF5722;
        }
        button {
            background-color: #4CAF50;
            color: white;
            font-size: 18px;
            padding: 10px 20px;
            cursor: pointer;
            border: none;
            border-radius: 8px;
            transition: background-color 0.3s;
        }

        button:hover {
            background-color: #45a049;
        }
        .status {
            font-size: 18px;
            margin-bottom: 20px;
        }

        .winner {
            font-weight: bold;
            color: #FF5722;
        }

        .draw {
            font-weight: bold;
            color: #2196F3;
        }
        .reset-button {
            background-color: #f44336;
            margin-top: 20px;
        }

        .reset-button:hover {
            background-color: #e53935;
        }
    </style>
</head>
<body>

<div class="game-container">
    <h1>Tic-Tac-Toe</h1>
    <div class="status">
        <p id="game-status">Player X's turn</p>
    </div>
    <div class="board">
        <div class="cell" onclick="makeMove(0)"></div>
        <div class="cell" onclick="makeMove(1)"></div>
        <div class="cell" onclick="makeMove(2)"></div>
        <div class="cell" onclick="makeMove(3)"></div>
        <div class="cell" onclick="makeMove(4)"></div>
        <div class="cell" onclick="makeMove(5)"></div>
        <div class="cell" onclick="makeMove(6)"></div>
        <div class="cell" onclick="makeMove(7)"></div>
        <div class="cell" onclick="makeMove(8)"></div>
    </div>
    <button class="reset-button" onclick="resetGame()">Reset Game</button>
</div>

<script>
    let currentPlayer = 'X';
    let gameBoard = ['', '', '', '', '', '', '', '', ''];
    let gameActive = true;

    const gameStatus = document.getElementById('game-status');
    const cells = document.querySelectorAll('.cell');
    function checkGameStatus() {
        const winningCombinations = [
            [0, 1, 2],
            [3, 4, 5],
            [6, 7, 8],
            [0, 3, 6],
            [1, 4, 7],
            [2, 5, 8],
            [0, 4, 8],
            [2, 4, 6],
        ];

        for (const combination of winningCombinations) {
            const [a, b, c] = combination;
            if (gameBoard[a] && gameBoard[a] === gameBoard[b] && gameBoard[a] === gameBoard[c]) {
                gameStatus.textContent = `${gameBoard[a]} wins!`;
                gameStatus.classList.add('winner');
                gameActive = false;
                highlightWinningCells(a, b, c);
                return;
            }
        }

        if (!gameBoard.includes('')) {
            gameStatus.textContent = 'It\'s a draw!';
            gameStatus.classList.add('draw');
            gameActive = false;
        }
    }
    function highlightWinningCells(a, b, c) {
        cells[a].style.backgroundColor = '#FFEB3B';
        cells[b].style.backgroundColor = '#FFEB3B';
        cells[c].style.backgroundColor = '#FFEB3B';
    }
    function makeMove(index) {
        if (gameBoard[index] !== '' || !gameActive) return;

        gameBoard[index] = currentPlayer;
        cells[index].textContent = currentPlayer;
        cells[index].classList.add(currentPlayer);

        checkGameStatus();

        if (gameActive) {
            currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
            gameStatus.textContent = `${currentPlayer}'s turn`;
        }
    }
    function resetGame() {
        gameBoard = ['', '', '', '', '', '', '', '', ''];
        currentPlayer = 'X';
        gameActive = true;
        gameStatus.textContent = "Player X's turn";
        gameStatus.classList.remove('winner', 'draw');
        cells.forEach(cell => {
            cell.textContent = '';
            cell.classList.remove('X', 'O');
            cell.style.backgroundColor = '#f1f1f1';
        });
    }
</script>

</body>
</html>
